CREATE OR REPLACE VIEW `gostudent-439713.database.market_performance_view` AS
WITH monthly_marketing_costs AS (
    SELECT 
        date AS month,
        marketing_source,
        marketing_costs AS total_marketing_cost  
    FROM 
        `gostudent-439713.database.marketing_costs_dataset`
),
monthly_sales_costs AS (
    SELECT 
        month,
        total_sales_costs AS total_sales_cost, 
        trial_costs AS total_trial_cost  
    FROM 
        `gostudent-439713.database.sales_cost_dataset`
)
SELECT 
    FORMAT_TIMESTAMP('%Y-%m', l.create_date) AS month,
    l.marketing_source,
    
    mmc.total_marketing_cost AS  total_marketing_cost,

    msc.total_sales_cost + msc.total_trial_cost AS sales_cost,

   
    (mmc.total_marketing_cost + msc.total_sales_cost + msc.total_trial_cost) / COUNT(DISTINCT l.contact_id) AS CPL,
    

    mmc.total_marketing_cost / COUNT(DISTINCT c.contact_id) AS mCAC,
    

    msc.total_sales_cost / COUNT(DISTINCT c.contact_id) AS sCAC,
    

    AVG(cl.avg_clv) AS CLV,
    

    (AVG(cl.avg_clv) / ((mmc.total_marketing_cost / COUNT(DISTINCT c.contact_id)) + (msc.total_sales_cost / COUNT(DISTINCT c.contact_id)))) AS CLV_CAC_Ratio
FROM 
    `gostudent-439713.database.lead_dataset_cleaned` l
LEFT JOIN 
    monthly_marketing_costs mmc ON FORMAT_TIMESTAMP('%Y-%m', l.create_date) = mmc.month AND l.marketing_source = mmc.marketing_source
LEFT JOIN 
    monthly_sales_costs msc ON FORMAT_TIMESTAMP('%Y-%m', l.create_date) = msc.month
LEFT JOIN 
    `gostudent-439713.database.customer_dataset_cleaned` c ON l.contact_id = c.contact_id
LEFT JOIN 
    `gostudent-439713.database.clv_dataset` cl ON c.contract_length = cl.contract_length
GROUP BY 
    month, l.marketing_source, mmc.total_marketing_cost, msc.total_sales_cost, msc.total_trial_cost;


    ---------------------------------------------------------------------------------
    CREATE OR REPLACE VIEW `gostudent-439713.database.lead_quality_global_view` AS
SELECT 
    FORMAT_TIMESTAMP('%Y-%m', l.create_date) AS month,
    l.marketing_source,

    (SUM(CASE WHEN c.trial_booked = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT l.contact_id)) * 100 AS Lead_to_Trial_Conversion_Rate,
    
  
    (COUNT(DISTINCT cu.contact_id) / NULLIF(SUM(CASE WHEN c.trial_booked = 1 THEN 1 ELSE 0 END), 0)) * 100 AS Trial_to_Customer_Conversion_Rate,
    

    AVG(cu.contract_length) AS Average_Contract_Length
    
FROM 
    `gostudent-439713.database.lead_dataset_cleaned` l
LEFT JOIN 
    `gostudent-439713.database.call_dataset_clean` c ON l.contact_id = c.contact_id
LEFT JOIN 
    `gostudent-439713.database.customer_dataset_cleaned` cu ON c.contact_id = cu.contact_id
GROUP BY 
    month, l.marketing_source;

--------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW `gostudent-439713.database.lead_quality_detailed_view` AS
SELECT 
    FORMAT_TIMESTAMP('%Y-%m', l.create_date) AS month,
    l.marketing_source,
    
    -- Tagging Test Group vs. No Test Group
    CASE 
        WHEN l.test_flag > 0 THEN 'Test Group'
        ELSE 'No Test Group'
    END AS test_group_category,
    
    -- Tagging Known City vs. Unknown City
    CASE 
        WHEN l.known_city = 1 THEN 'Known City'
        ELSE 'Unknown City'
    END AS city_status,

    (SUM(CASE WHEN c.trial_booked = 1 THEN 1 ELSE 0 END) / COUNT(DISTINCT l.contact_id)) * 100 AS Lead_to_Trial_Conversion_Rate,
    
 
    (COUNT(DISTINCT cu.contact_id) / NULLIF(SUM(CASE WHEN c.trial_booked = 1 THEN 1 ELSE 0 END), 0)) * 100 AS Trial_to_Customer_Conversion_Rate,
    
 
    AVG(cu.contract_length) AS Average_Contract_Length
    
FROM 
    `gostudent-439713.database.lead_dataset_cleaned` l
LEFT JOIN 
    `gostudent-439713.database.call_dataset_clean` c ON l.contact_id = c.contact_id
LEFT JOIN 
    `gostudent-439713.database.customer_dataset_cleaned` cu ON c.contact_id = cu.contact_id
GROUP BY 
    month, l.marketing_source, test_group_category, city_status;


------------------------------------------------------------------------------------
CREATE OR REPLACE VIEW `gostudent-439713.database.sales_efficiency_over_time_view` AS
SELECT 
    FORMAT_TIMESTAMP('%Y-%m', c.trial_date) AS month,
    
    -- Calls per Lead 
    SUM(c.call_attempts) / COUNT(DISTINCT c.contact_id) AS Calls_per_Lead,
    
    -- Call Duration per Lead 
    SUM(c.total_call_duration) / COUNT(DISTINCT c.contact_id) AS Call_Duration_per_Lead,
    
    -- Reached Call Rate 
    (SUM(c.calls_30) / NULLIF(SUM(c.call_attempts), 0)) * 100 AS Reached_Call_Rate,
    
    -- Conversion per Call over time
    COUNT(DISTINCT cu.contact_id) / NULLIF(SUM(c.call_attempts), 0) AS Conversion_per_Call,
    
    -- Average Calls to Conversion
    SUM(c.call_attempts) / NULLIF(COUNT(DISTINCT cu.contact_id), 0) AS Avg_Calls_to_Conversion
    
FROM 
    `gostudent-439713.database.call_dataset_clean` c
LEFT JOIN 
    `gostudent-439713.database.customer_dataset_cleaned` cu ON c.contact_id = cu.contact_id
WHERE 
    FORMAT_TIMESTAMP('%Y-%m', c.trial_date) NOT IN ('2023-04', '2022-07')  -- Exclude April 2023 and July 2022
GROUP BY 
    month
 ORDER BY month asc

-----------------------------------------------------------------------------------
CREATE OR REPLACE VIEW `gostudent-439713.database.sales_efficiency_over_time_view_detailed` AS
SELECT 
    FORMAT_TIMESTAMP('%Y-%m', c.trial_date) AS month,
    l.marketing_source,  
    
    
    SUM(c.call_attempts) / COUNT(DISTINCT c.contact_id) AS Calls_per_Lead,
    

    SUM(c.total_call_duration) / COUNT(DISTINCT c.contact_id) AS Call_Duration_per_Lead,
    

    (SUM(c.calls_30) / NULLIF(SUM(c.call_attempts), 0)) * 100 AS Reached_Call_Rate,
    

    COUNT(DISTINCT cu.contact_id) / NULLIF(SUM(c.call_attempts), 0) AS Conversion_per_Call,
    

    SUM(c.call_attempts) / NULLIF(COUNT(DISTINCT cu.contact_id), 0) AS Avg_Calls_to_Conversion,
    
    

    AVG(c.total_call_duration / NULLIF(c.call_attempts, 0)) AS Avg_Call_Duration_per_Attempt,
    

    SUM(c.call_attempts) / NULLIF(COUNT(DISTINCT cu.contact_id), 0) AS Avg_Calls_per_Customer,


    SUM(c.call_attempts) AS Total_Call_Attempts,


    SUM(c.total_call_duration) AS Total_Call_Duration,

    SUM(c.calls_30) AS Total_Reached_Calls

FROM 
    `gostudent-439713.database.call_dataset_clean` c
LEFT JOIN 
    `gostudent-439713.database.customer_dataset_cleaned` cu ON c.contact_id = cu.contact_id
LEFT JOIN 
    `gostudent-439713.database.lead_dataset_cleaned` l ON c.contact_id = l.contact_id  
WHERE 
    FORMAT_TIMESTAMP('%Y-%m', c.trial_date) NOT IN ('2023-04', '2022-07')  -- Exclude April 2023 and July 2022/ outliers
GROUP BY 
    month, l.marketing_source
ORDER BY 
    month ASC, l.marketing_source;
